// templates/profile_content.templ
package templates

import (
"GoMessageApp/internal/models"
"strings"
)

templ UserProfileContent(user models.User) {
<div class="h-full flex flex-col bg-gray-800 text-white">
    <div class="flex justify-between items-center p-4 border-b border-gray-700">
        <h2 class="text-xl font-semibold">Profile</h2>
        <button id="close-profile" class="text-gray-400 hover:text-white">
            <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24"
                stroke="currentColor">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
            </svg>
        </button>
    </div>
    <div class="flex-grow overflow-y-auto p-4">
        <div class="mb-6">
            <div class="relative w-32 h-32 mx-auto">
                if user.ProfilePicture != "" {
                <img src={ user.ProfilePicture } alt="Profile picture"
                    class="w-full h-full rounded-full object-cover" />
                } else {
                <div
                    class="w-full h-full rounded-full bg-blue-500 flex items-center justify-center text-white text-4xl font-bold">
                    if len(user.UserName) > 0 {
                    { strings.ToUpper(string(user.UserName[0])) }
                    } else {
                    ?
                    }
                </div>
                }
                <label for="profile-picture-upload"
                    class="absolute bottom-0 right-0 bg-blue-500 text-white rounded-full p-2 cursor-pointer">
                    <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none" viewBox="0 0 24 24"
                        stroke="currentColor">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                            d="M3 9a2 2 0 012-2h.93a2 2 0 001.664-.89l.812-1.22A2 2 0 0110.07 4h3.86a2 2 0 011.664.89l.812 1.22A2 2 0 0018.07 7H19a2 2 0 012 2v9a2 2 0 01-2 2H5a2 2 0 01-2-2V9z">
                        </path>
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                            d="M15 13a3 3 0 11-6 0 3 3 0 016 0z"></path>
                    </svg>
                </label>
                <input id="profile-picture-upload" name="profilePicture" type="file" accept="image/*" class="hidden" />
            </div>
        </div>
        <div class="mt-2 flex justify-center">
            if user.ProfilePicture != "" {
            <button hx-delete="/auth/user/profile-picture" hx-target="#profile-slide" hx-swap="innerHTML"
                class="text-red-500 hover:text-red-700 text-sm">
                Delete Picture
            </button>
            }
        </div>
        <div id="profile-info" class="mb-4">
            <h3 class="text-lg font-semibold mb-1">{ user.UserName }</h3>
            <p class="text-gray-300">{ user.Description }</p>
        </div>
        <button id="edit-profile-btn"
            class="w-full bg-blue-500 hover:bg-blue-600 text-white font-semibold py-2 px-4 rounded-md transition duration-300 ease-in-out mb-4">
            Edit Profile
        </button>
        <form id="edit-profile-form" hx-put="/auth/user/profile" hx-target="#profile-slide" hx-swap="innerHTML"
            class="hidden">
            <div class="mb-4">
                <label for="userName" class="block text-sm font-medium text-gray-300 mb-1">Username</label>
                <input type="text" id="userName" name="userName" value={ user.UserName }
                    class="w-full px-3 py-2 bg-gray-700 text-white border border-gray-600 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500" />
            </div>
            <div class="mb-4">
                <label for="description" class="block text-sm font-medium text-gray-300 mb-1">About</label>
                <textarea id="description" name="description" rows="3"
                    class="w-full px-3 py-2 bg-gray-700 text-white border border-gray-600 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500">
                    {
                    user.Description }
                </textarea>
            </div>
            <div class="flex justify-between">
                <button type="button" id="cancel-edit"
                    class="bg-gray-600 hover:bg-gray-700 text-white font-semibold py-2 px-4 rounded-md transition duration-300 ease-in-out">
                    Cancel
                </button>
                <button type="submit"
                    class="bg-blue-500 hover:bg-blue-600 text-white font-semibold py-2 px-4 rounded-md transition duration-300 ease-in-out">
                    Save Changes
                </button>
            </div>
        </form>
    </div>
</div>
<script>
    document.getElementById('close-profile').addEventListener('click', function () {
        document.getElementById('profile-slide').classList.add('-translate-x-full');
    });

    document.getElementById('edit-profile-btn').addEventListener('click', function () {
        document.getElementById('profile-info').classList.add('hidden');
        document.getElementById('edit-profile-btn').classList.add('hidden');
        document.getElementById('edit-profile-form').classList.remove('hidden');
    });

    document.getElementById('cancel-edit').addEventListener('click', function () {
        document.getElementById('profile-info').classList.remove('hidden');
        document.getElementById('edit-profile-btn').classList.remove('hidden');
        document.getElementById('edit-profile-form').classList.add('hidden');
    });

    document.getElementById('profile-picture-upload').addEventListener('change', function () {
        if (this.files && this.files[0]) {
            var formData = new FormData();
            formData.append('profilePicture', this.files[0]);
            htmx.ajax('POST', '/auth/user/profile-picture', {
                target: '#profile-slide',
                swap: 'innerHTML',
                enctype: 'multipart/form-data',
                headers: {
                    'X-HTMX-Request': 'true'
                },
                body: formData
            }).then(function (response) {
                console.log('Success:', response);
            }).catch(function (error) {
                console.error('Error:', error);
            });
        }
    });

</script>
}
